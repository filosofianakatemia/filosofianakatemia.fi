<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>fi.filosofianakatemia</groupId>
  <artifactId>site</artifactId>
  <version>2.0</version>
  <packaging>pom</packaging>
  <name>Filosofian Akatemia Site</name>
  <description>Filosofian Akatemia Site</description>
  <url>http://www.filosofianakatemia.fi</url>
  <inceptionYear>2015</inceptionYear>
  <licenses>
    <license>
      <name>GNU Affero General Public License, Version 3</name>
      <url>http://www.gnu.org/licenses/agpl-3.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git@github.com:filosofianakatemia/filosofianakatemia.fi.git</connection>
    <developerConnection>scm:git:git@github.com:filosofianakatemia/filosofianakatemia.fi.git</developerConnection>
    <url>git@github.com:filosofianakatemia/filosofianakatemia.fi.git</url>
  </scm>
  <developers>
    <developer>
      <id>ttiurani</id>
      <name>Timo Tiuraniemi</name>
      <email>timo.tiuraniemi@iki.fi</email>
    </developer>
    <developer>
      <id>jpsalo</id>
      <name>JP Salo</name>
      <email>jukapeka@gmail.com</email>
    </developer>
  </developers>
  <properties>
    <docker.skip>true</docker.skip>
    <extendedmind.api.url>https://ext.md/api</extendedmind.api.url>
  </properties>
  <profiles>
    <profile>
      <id>docker-activation</id>
      <activation>
        <property>
          <name>env.DOCKER_HOST</name>
        </property>
      </activation>
      <properties>
        <docker.skip>false</docker.skip>
      </properties>
    </profile>
  </profiles>
  <build>
    <plugins>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>v7.9.0</nodeVersion>
              <npmVersion>4.4.4</npmVersion>
              <nodeDownloadRoot>https://nodejs.org/dist/</nodeDownloadRoot>
            </configuration>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm-build</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>compile</phase>
            <configuration>
              <arguments>run build</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm-prune-to-production</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <arguments>prune --production</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm-back-to-developement</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <workingDirectory>src</workingDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <id>copy-less-compiler</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/src/static/js</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/node_modules/less/dist</directory>
                  <includes>
                    <include>less.js</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <!-- This is needed sot that Docker doesn't make the dirs root:root -->
            <id>create-target-dirs</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="create-docker-dirs">
                <mkdir dir="target/docker-dirs/fiak-site-dynamic/tiedostot/test" />
                <mkdir dir="target/docker-dirs/fiak-site-data" />
              </target>
            </configuration>
          </execution>
       </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.20.0</version>
        <configuration>
          <sourceDirectory>docker</sourceDirectory>
          <images>
            <image>
              <name>quay.io/fiak/site-static</name>
              <alias>fiak-site-static</alias>
              <build>
                <from>quay.io/extendedmind/data-volume:dv-3.5-1</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/app/fiak-site-static</basedir>
                  <descriptor>fiak-site-static-assembly.xml</descriptor>
                </assembly>
                <entryPoint>
                  <exec>
                    <arg>/bin/cp</arg>
                    <arg>-R</arg>
                    <arg>/app/fiak-site-static/.</arg>
                    <arg>/app/fiak-site-data</arg>
                  </exec>
                </entryPoint>
              </build>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/fiak-site-data:/app/fiak-site-data</volume>
                  </bind>
                </volumes>
              </run>
            </image>
            <image>
              <name>quay.io/fiak/site</name>
              <alias>fiak-site</alias>
              <build>
                <from>quay.io/extendedmind/node:node-7.5.0-1</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
                <ports>
                  <port>3001</port>
                </ports>
                <volumes>
                  <volume>/etc/nginx/sites-enabled</volume>
                </volumes>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/</basedir>
                  <descriptor>fiak-site-assembly.xml</descriptor>
                </assembly>
                <workdir>/app/fiak-site</workdir>
                <entryPoint>
                  <exec>
                    <arg>pm2-docker</arg>
                    <arg>fiak-site-pm2.json</arg>
                  </exec>
                </entryPoint>
              </build>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/fiak-site-dynamic:/app/fiak-site-dynamic</volume>
                  </bind>
                </volumes>
                <env>
                  <EXTENDEDMIND_API_URL>${extendedmind.api.url}</EXTENDEDMIND_API_URL>
                </env>
              </run>
            </image>
            <image>
              <name>quay.io/extendedmind/nginx:nginx-1.11.9-1</name>
              <alias>nginx</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <from>
                    <image>fiak-site</image>
                  </from>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/fiak-site-data:/app/fiak-site-data:ro</volume>
                    <volume>${project.build.directory}/docker-dirs/fiak-site-dynamic:/app/fiak-site-dynamic:ro</volume>
                  </bind>
                </volumes>
                <links>
                  <link>fiak-site:fiak-site</link>
                </links>
                <ports>
                  <port>8009:8009</port>
                </ports>
              </run>
            </image>
            <image>
              <name>quay.io/extmd/sync-folder</name>
              <alias>fiak-sync-folder</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/fiak-site-data:/app/fiak-site-data:ro</volume>
                    <volume>${project.build.directory}/docker-dirs/fiak-site-dynamic:/app/fiak-site-dynamic</volume>
                  </bind>
                </volumes>
                <!-- To test, rsync all static files to /tiedostot/test -->
                <cmd>/app/fiak-site-data/static /app/fiak-site-dynamic/tiedostot/test gsutil</cmd>
              </run>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>build</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>start-docker</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-docker</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/src/etc</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/src/node</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/src/node_modules</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/src/js</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/src/static/css</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/src/static/js</directory>
              <includes>
                <include>less.js</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
